//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.18449
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace RecursosHumanos.AdministrativoService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Persona", Namespace="http://schemas.datacontract.org/2004/07/WebServiceProyectoUniversidad.Estructuras" +
        "")]
    [System.SerializableAttribute()]
    public partial class Persona : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ApellidosField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CedulaField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NombreField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Apellidos {
            get {
                return this.ApellidosField;
            }
            set {
                if ((object.ReferenceEquals(this.ApellidosField, value) != true)) {
                    this.ApellidosField = value;
                    this.RaisePropertyChanged("Apellidos");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Cedula {
            get {
                return this.CedulaField;
            }
            set {
                if ((this.CedulaField.Equals(value) != true)) {
                    this.CedulaField = value;
                    this.RaisePropertyChanged("Cedula");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Nombre {
            get {
                return this.NombreField;
            }
            set {
                if ((object.ReferenceEquals(this.NombreField, value) != true)) {
                    this.NombreField = value;
                    this.RaisePropertyChanged("Nombre");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Adminstrador", Namespace="http://schemas.datacontract.org/2004/07/WebServiceProyectoUniversidad.Estructuras" +
        "")]
    [System.SerializableAttribute()]
    public partial class Adminstrador : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UsernameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string passwordField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Username {
            get {
                return this.UsernameField;
            }
            set {
                if ((object.ReferenceEquals(this.UsernameField, value) != true)) {
                    this.UsernameField = value;
                    this.RaisePropertyChanged("Username");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string password {
            get {
                return this.passwordField;
            }
            set {
                if ((object.ReferenceEquals(this.passwordField, value) != true)) {
                    this.passwordField = value;
                    this.RaisePropertyChanged("password");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Administrador_Persona", Namespace="http://schemas.datacontract.org/2004/07/WebServiceProyectoUniversidad.Estructuras" +
        "")]
    [System.SerializableAttribute()]
    public partial class Administrador_Persona : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ApellidosField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CedulaField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NombreField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UsernameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string passwordField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Apellidos {
            get {
                return this.ApellidosField;
            }
            set {
                if ((object.ReferenceEquals(this.ApellidosField, value) != true)) {
                    this.ApellidosField = value;
                    this.RaisePropertyChanged("Apellidos");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Cedula {
            get {
                return this.CedulaField;
            }
            set {
                if ((this.CedulaField.Equals(value) != true)) {
                    this.CedulaField = value;
                    this.RaisePropertyChanged("Cedula");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Nombre {
            get {
                return this.NombreField;
            }
            set {
                if ((object.ReferenceEquals(this.NombreField, value) != true)) {
                    this.NombreField = value;
                    this.RaisePropertyChanged("Nombre");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Username {
            get {
                return this.UsernameField;
            }
            set {
                if ((object.ReferenceEquals(this.UsernameField, value) != true)) {
                    this.UsernameField = value;
                    this.RaisePropertyChanged("Username");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string password {
            get {
                return this.passwordField;
            }
            set {
                if ((object.ReferenceEquals(this.passwordField, value) != true)) {
                    this.passwordField = value;
                    this.RaisePropertyChanged("password");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="AdministrativoService.IAdministrativosService")]
    public interface IAdministrativosService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdministrativosService/DoWork", ReplyAction="http://tempuri.org/IAdministrativosService/DoWorkResponse")]
        string DoWork();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdministrativosService/DoWork", ReplyAction="http://tempuri.org/IAdministrativosService/DoWorkResponse")]
        System.Threading.Tasks.Task<string> DoWorkAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdministrativosService/InsertarAdministrador", ReplyAction="http://tempuri.org/IAdministrativosService/InsertarAdministradorResponse")]
        string InsertarAdministrador(RecursosHumanos.AdministrativoService.Persona persona, RecursosHumanos.AdministrativoService.Adminstrador administrador);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdministrativosService/InsertarAdministrador", ReplyAction="http://tempuri.org/IAdministrativosService/InsertarAdministradorResponse")]
        System.Threading.Tasks.Task<string> InsertarAdministradorAsync(RecursosHumanos.AdministrativoService.Persona persona, RecursosHumanos.AdministrativoService.Adminstrador administrador);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdministrativosService/CambiarClave", ReplyAction="http://tempuri.org/IAdministrativosService/CambiarClaveResponse")]
        string CambiarClave(string Username, string ContraseñaActual, string NuevaContraseña, string RepetirContraseña);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdministrativosService/CambiarClave", ReplyAction="http://tempuri.org/IAdministrativosService/CambiarClaveResponse")]
        System.Threading.Tasks.Task<string> CambiarClaveAsync(string Username, string ContraseñaActual, string NuevaContraseña, string RepetirContraseña);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdministrativosService/CambiarPropietario", ReplyAction="http://tempuri.org/IAdministrativosService/CambiarPropietarioResponse")]
        string CambiarPropietario(string username, int cedula);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdministrativosService/CambiarPropietario", ReplyAction="http://tempuri.org/IAdministrativosService/CambiarPropietarioResponse")]
        System.Threading.Tasks.Task<string> CambiarPropietarioAsync(string username, int cedula);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdministrativosService/EliminarAdministrador", ReplyAction="http://tempuri.org/IAdministrativosService/EliminarAdministradorResponse")]
        string EliminarAdministrador(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdministrativosService/EliminarAdministrador", ReplyAction="http://tempuri.org/IAdministrativosService/EliminarAdministradorResponse")]
        System.Threading.Tasks.Task<string> EliminarAdministradorAsync(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdministrativosService/TraerAdministradores", ReplyAction="http://tempuri.org/IAdministrativosService/TraerAdministradoresResponse")]
        RecursosHumanos.AdministrativoService.Administrador_Persona[] TraerAdministradores(string filtro);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdministrativosService/TraerAdministradores", ReplyAction="http://tempuri.org/IAdministrativosService/TraerAdministradoresResponse")]
        System.Threading.Tasks.Task<RecursosHumanos.AdministrativoService.Administrador_Persona[]> TraerAdministradoresAsync(string filtro);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdministrativosService/ObtenerAdministrador", ReplyAction="http://tempuri.org/IAdministrativosService/ObtenerAdministradorResponse")]
        RecursosHumanos.AdministrativoService.Administrador_Persona ObtenerAdministrador(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdministrativosService/ObtenerAdministrador", ReplyAction="http://tempuri.org/IAdministrativosService/ObtenerAdministradorResponse")]
        System.Threading.Tasks.Task<RecursosHumanos.AdministrativoService.Administrador_Persona> ObtenerAdministradorAsync(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdministrativosService/ValidarSesion", ReplyAction="http://tempuri.org/IAdministrativosService/ValidarSesionResponse")]
        bool ValidarSesion(string username, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdministrativosService/ValidarSesion", ReplyAction="http://tempuri.org/IAdministrativosService/ValidarSesionResponse")]
        System.Threading.Tasks.Task<bool> ValidarSesionAsync(string username, string password);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IAdministrativosServiceChannel : RecursosHumanos.AdministrativoService.IAdministrativosService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AdministrativosServiceClient : System.ServiceModel.ClientBase<RecursosHumanos.AdministrativoService.IAdministrativosService>, RecursosHumanos.AdministrativoService.IAdministrativosService {
        
        public AdministrativosServiceClient() {
        }
        
        public AdministrativosServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public AdministrativosServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AdministrativosServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AdministrativosServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string DoWork() {
            return base.Channel.DoWork();
        }
        
        public System.Threading.Tasks.Task<string> DoWorkAsync() {
            return base.Channel.DoWorkAsync();
        }
        
        public string InsertarAdministrador(RecursosHumanos.AdministrativoService.Persona persona, RecursosHumanos.AdministrativoService.Adminstrador administrador) {
            return base.Channel.InsertarAdministrador(persona, administrador);
        }
        
        public System.Threading.Tasks.Task<string> InsertarAdministradorAsync(RecursosHumanos.AdministrativoService.Persona persona, RecursosHumanos.AdministrativoService.Adminstrador administrador) {
            return base.Channel.InsertarAdministradorAsync(persona, administrador);
        }
        
        public string CambiarClave(string Username, string ContraseñaActual, string NuevaContraseña, string RepetirContraseña) {
            return base.Channel.CambiarClave(Username, ContraseñaActual, NuevaContraseña, RepetirContraseña);
        }
        
        public System.Threading.Tasks.Task<string> CambiarClaveAsync(string Username, string ContraseñaActual, string NuevaContraseña, string RepetirContraseña) {
            return base.Channel.CambiarClaveAsync(Username, ContraseñaActual, NuevaContraseña, RepetirContraseña);
        }
        
        public string CambiarPropietario(string username, int cedula) {
            return base.Channel.CambiarPropietario(username, cedula);
        }
        
        public System.Threading.Tasks.Task<string> CambiarPropietarioAsync(string username, int cedula) {
            return base.Channel.CambiarPropietarioAsync(username, cedula);
        }
        
        public string EliminarAdministrador(string username) {
            return base.Channel.EliminarAdministrador(username);
        }
        
        public System.Threading.Tasks.Task<string> EliminarAdministradorAsync(string username) {
            return base.Channel.EliminarAdministradorAsync(username);
        }
        
        public RecursosHumanos.AdministrativoService.Administrador_Persona[] TraerAdministradores(string filtro) {
            return base.Channel.TraerAdministradores(filtro);
        }
        
        public System.Threading.Tasks.Task<RecursosHumanos.AdministrativoService.Administrador_Persona[]> TraerAdministradoresAsync(string filtro) {
            return base.Channel.TraerAdministradoresAsync(filtro);
        }
        
        public RecursosHumanos.AdministrativoService.Administrador_Persona ObtenerAdministrador(string username) {
            return base.Channel.ObtenerAdministrador(username);
        }
        
        public System.Threading.Tasks.Task<RecursosHumanos.AdministrativoService.Administrador_Persona> ObtenerAdministradorAsync(string username) {
            return base.Channel.ObtenerAdministradorAsync(username);
        }
        
        public bool ValidarSesion(string username, string password) {
            return base.Channel.ValidarSesion(username, password);
        }
        
        public System.Threading.Tasks.Task<bool> ValidarSesionAsync(string username, string password) {
            return base.Channel.ValidarSesionAsync(username, password);
        }
    }
}
