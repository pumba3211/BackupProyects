/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Forms;

import Archivo.Archivo;
import BaseDatos.ConexionPostgres;
import BaseDatos.MetodosPersona;
import Clases.Persona;
import java.util.ArrayList;
import java.util.Iterator;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author ronald
 */
public class Principal extends javax.swing.JFrame {

    DefaultTableModel personas;
    Archivo file = new Archivo();

    /**
     * Creates new form Principal
     */
    public Principal() {
        initComponents();
        InicializarConexion();
        cargarPersonas();
    }

    public void InicializarConexion() {
        file.leer();
        try {
            //Se crea la conexion con la base de datos con los parametros del archivo ini.ini
            ConexionPostgres conection = new ConexionPostgres(file.getBase(), file.getUser(), file.getPassword(), file.getIp(), file.getPort());
            BaseDatos.Conexion.getInstance().Conection = conection.Conection;
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "A ocurrido un error al conectarse con el servidor" + e.toString(), "Error", JOptionPane.ERROR_MESSAGE);
        }
    }

    public void Insertar(Persona persona) {
        BaseDatos.Conexion.getInstance().Limpiar();
        MetodosPersona metodos = new MetodosPersona();
        metodos.Insertar(persona);
        if (BaseDatos.Conexion.getInstance().isError) {
            JOptionPane.showMessageDialog(null, "A ocurrido un error al insertar "
                    + BaseDatos.Conexion.getInstance().errorDescription,
                    "Error", JOptionPane.ERROR_MESSAGE);
        } else {
            JOptionPane.showMessageDialog(null, "Se ha insertado con exito",
                    "Correcto", JOptionPane.INFORMATION_MESSAGE);
        }
    }

    public void Modificar(Persona persona) {
        BaseDatos.Conexion.getInstance().Limpiar();
        MetodosPersona metodos = new MetodosPersona();
        metodos.Modificar(persona);
        if (BaseDatos.Conexion.getInstance().isError) {
            JOptionPane.showMessageDialog(null, "A ocurrido un error al modificar "
                    + BaseDatos.Conexion.getInstance().errorDescription,
                    "Error", JOptionPane.ERROR_MESSAGE);
        } else {
            JOptionPane.showMessageDialog(null, "Se ha modificado con exito",
                    "Correcto", JOptionPane.INFORMATION_MESSAGE);
        }
    }

    public void Eliminar(int idpersona) {
        BaseDatos.Conexion.getInstance().Limpiar();
        MetodosPersona metodos = new MetodosPersona();
        metodos.Eliminar(idpersona);
        if (BaseDatos.Conexion.getInstance().isError) {
            JOptionPane.showMessageDialog(null, "A ocurrido un error al modificar "
                    + BaseDatos.Conexion.getInstance().errorDescription,
                    "Error", JOptionPane.ERROR_MESSAGE);
        } else {
            JOptionPane.showMessageDialog(null, "Se ha modificado con exito",
                    "Correcto", JOptionPane.INFORMATION_MESSAGE);
        }
    }

    public void LimpiarCampos() {
        textfieldId.setText("");
        textfieldCedula.setText("");
        textfieldIdNombre.setText("");
        textfieldIdApellidos.setText("");
        textfieldIdAños.setText("");
    }

    public void cargarPersonas() {

        personas = new DefaultTableModel();
        personas.addColumn("Id");
        personas.addColumn("Cedula");
        personas.addColumn("Nombre");
        personas.addColumn("Apellidos");
        personas.addColumn("Años");
        MetodosPersona metodos = new MetodosPersona();
        ArrayList<Persona> Personas = metodos.OptenerPersonas();
        try {
            for (Persona Persona : Personas) {
                Object[] Campos = {String.valueOf(Persona.id), Persona.cedula, Persona.Nombre, Persona.Apellidos, String.valueOf(Persona.años)};
                personas.addRow(Campos);
            }
            tablaPersonas.setModel(personas);
        } catch (Exception e) {

            System.out.println("Error: " + e.toString());
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        AgregarButton = new javax.swing.JButton();
        ModificarButton = new javax.swing.JButton();
        EliminarButton = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        textfieldId = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        textfieldCedula = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        textfieldIdNombre = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        textfieldIdApellidos = new javax.swing.JTextField();
        textfieldIdAños = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        tablaPersonas = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        AgregarButton.setText("Agregar");
        AgregarButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AgregarButtonActionPerformed(evt);
            }
        });

        ModificarButton.setText("Modificar");
        ModificarButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ModificarButtonActionPerformed(evt);
            }
        });

        EliminarButton.setText("Eliminar");
        EliminarButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EliminarButtonActionPerformed(evt);
            }
        });

        jLabel1.setText("Id:");

        textfieldId.setEditable(false);
        textfieldId.setEnabled(false);

        jLabel2.setText("Cedula:");

        jLabel3.setText("Nombre:");

        jLabel4.setText("Apellidos:");

        jLabel5.setText("Años:");

        tablaPersonas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        tablaPersonas.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tablaPersonasMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tablaPersonas);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 652, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(AgregarButton, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(ModificarButton, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(EliminarButton, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(jLabel2)))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(textfieldId)
                                            .addComponent(textfieldCedula, javax.swing.GroupLayout.DEFAULT_SIZE, 116, Short.MAX_VALUE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel4)
                                            .addComponent(jLabel5))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(textfieldIdAños, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(textfieldIdApellidos, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addComponent(textfieldIdNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 32, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(AgregarButton)
                    .addComponent(ModificarButton)
                    .addComponent(EliminarButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(textfieldId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(textfieldIdApellidos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(textfieldCedula, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addComponent(textfieldIdAños, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(textfieldIdNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addGap(38, 38, 38))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void AgregarButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AgregarButtonActionPerformed
        // TODO add your handling code here:
        try {
            Persona persona = new Persona(0,
                    textfieldCedula.getText(), textfieldIdNombre.getText(),
                    textfieldIdApellidos.getText(), Integer.parseInt(textfieldIdAños.getText()));
            Insertar(persona);
            LimpiarCampos();
            cargarPersonas();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(rootPane, e.toString(), "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_AgregarButtonActionPerformed

    private void ModificarButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ModificarButtonActionPerformed
        // TODO add your handling code here:
        Persona persona = new Persona(Integer.parseInt(textfieldId.getText()),
                textfieldCedula.getText(), textfieldIdNombre.getText(),
                textfieldIdApellidos.getText(), Integer.parseInt(textfieldIdAños.getText()));
        Modificar(persona);
        LimpiarCampos();
        cargarPersonas();
    }//GEN-LAST:event_ModificarButtonActionPerformed

    private void EliminarButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EliminarButtonActionPerformed
        // TODO add your handling code here:

        Eliminar(Integer.parseInt(textfieldId.getText()));
        LimpiarCampos();
        cargarPersonas();
    }//GEN-LAST:event_EliminarButtonActionPerformed

    private void tablaPersonasMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablaPersonasMouseClicked
        // TODO add your handling code here:
        textfieldId.setText((String) tablaPersonas.getValueAt(tablaPersonas.getSelectedRow(), 0));
        textfieldCedula.setText((String) tablaPersonas.getValueAt(tablaPersonas.getSelectedRow(), 1));
        textfieldIdNombre.setText((String) tablaPersonas.getValueAt(tablaPersonas.getSelectedRow(), 2));
        textfieldIdApellidos.setText((String) tablaPersonas.getValueAt(tablaPersonas.getSelectedRow(), 3));
        textfieldIdAños.setText((String) tablaPersonas.getValueAt(tablaPersonas.getSelectedRow(), 4));

    }//GEN-LAST:event_tablaPersonasMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Principal().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AgregarButton;
    private javax.swing.JButton EliminarButton;
    private javax.swing.JButton ModificarButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable tablaPersonas;
    private javax.swing.JTextField textfieldCedula;
    private javax.swing.JTextField textfieldId;
    private javax.swing.JTextField textfieldIdApellidos;
    private javax.swing.JTextField textfieldIdAños;
    private javax.swing.JTextField textfieldIdNombre;
    // End of variables declaration//GEN-END:variables
}
